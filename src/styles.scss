@use "@angular/material" as mat;

@include mat.core();

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

$my-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-primary,
      accent: $my-accent,
    ),
    density: 0,
  )
);

$primary-color: #0f154b; // background
$secondary-color: #313872; // sidebar
$accent-color: #42487c; // table, chosen stuff
$warn-color: #ff6161;
$white-color: #ffffff;

:root {
  --primary-color: #{$primary-color};
  --secondary-color: #{$secondary-color};
  --accent-color: #{$accent-color};
  --warn-color: #{$warn-color};
  --white-color: #{$white-color};
}

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($my-theme);

/* You can add global styles to this file, and also import other style files */
html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Lato, "Helvetica Neue", sans-serif;
}
// Colors predefined in body
.primary-bg {
  background: var(--primary-color);
  color: var(--white-color);
}
.secondary-bg {
  background: var(--secondary-color);
  color: var(--white-color);
}
.accent-bg {
  background: var(--accent-color);
  color: var(--white-color);
}
.warn {
  color: var(--warn-color);
}
