@use "@angular/material" as mat;

@include mat.core();

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

$my-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-primary,
      accent: $my-accent,
    ),
    density: 0,
  )
);

$focus-primary: #0f154b; // background
$focus-secondary: #313872; // sidebar
$focus-accent: #42487c; // table, chosen stuff
$focus-warn: #ff6161;
$focus-white: #ffffff;

$focus-palette: (
  primary: $focus-primary,
  secondary: $focus-secondary,
  accent: $focus-accent,
  warn: $focus-warn,
  white: $focus-white,
);

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($my-theme);

/* You can add global styles to this file, and also import other style files */
html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Lato, "Helvetica Neue", sans-serif;
}
// Colors predefined in body
.primary-bg {
  background: map-get($focus-palette, primary);
  color: map-get($focus-palette, white);
}
.secondary-bg {
  background: map-get($focus-palette, secondary);
  color: map-get($focus-palette, white);
}
.accent-bg {
  background: map-get($focus-palette, accent);
  color: map-get($focus-palette, white);
}
.warn {
  color: map-get($focus-palette, warn);
}
